[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "simulife"
version = "1.0.0"
description = "A Multi-Agent LLM Simulation where AI agents live, learn, form relationships, and build societies"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SimuLife Development Team", email = "dev@simulife.ai"}
]
keywords = [
    "artificial intelligence", "multi-agent simulation", "ai agents", 
    "llm", "society simulation", "behavioral modeling", "emergent behavior",
    "complex systems", "agent-based modeling", "social simulation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Sociology",
    "Topic :: Games/Entertainment :: Simulation",
]
requires-python = ">=3.9"
dependencies = [
    "openai>=1.0.0",
    "faiss-cpu>=1.7.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "colorama>=0.4.4",
    "tqdm>=4.62.0",
    "pydantic>=2.0.0",
    "rich>=12.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/simulife-ai/simulife"
Documentation = "https://simulife.readthedocs.io/"
Repository = "https://github.com/simulife-ai/simulife.git"
"Bug Tracker" = "https://github.com/simulife-ai/simulife/issues"

[project.scripts]
simulife = "main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["simulife*"]

[tool.setuptools.package-data]
simulife = ["data/agent_configs/*.json", "docs/*.md"]

# Tool configurations
[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | data
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "E266", "E501", "W503"]
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "data",
    ".venv",
    ".env"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["simulife"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "setup.py",
    "main.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 